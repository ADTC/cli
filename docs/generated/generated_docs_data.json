[
  {
    "name": "app build",
    "description": "Build the app.",
    "overviewPreviewDescription": "Build the app.",
    "type": "command",
    "isVisualComponent": false,
    "defaultExample": {
      "codeblock": {
        "tabs": [
          {
            "title": "app build",
            "code": "no usage",
            "language": "bash"
          }
        ],
        "title": "app build"
      }
    },
    "definitions": [
      {
        "title": "app build",
        "description": "The following flags are available for the `app build` command:",
        "type": "appbuild",
        "typeDefinitions": {
          "appbuild": {
            "filePath": "src-docs/interfaces/app-build.interface.ts",
            "name": "appbuild",
            "description": "",
            "members": [
              {
                "filePath": "src-docs/interfaces/app-build.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--no-color",
                "value": "\"\"",
                "description": "Disable color output.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-build.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--verbose",
                "value": "\"\"",
                "description": "Increase the verbosity of the logs.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-build.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--path <value>",
                "value": "string",
                "description": "The path to your app directory.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-build.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-c, --config <value>",
                "value": "string",
                "description": "The name of the app configuration.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-build.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--skip-dependencies-installation",
                "value": "\"\"",
                "description": "Skips the installation of dependencies. Deprecated, use workspaces instead.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-build.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--client-id <value>",
                "value": "string",
                "description": "Application's Client ID that will be exposed at build time.",
                "isOptional": true
              }
            ],
            "value": "export interface appbuild {\n  /**\n   * Disable color output.\n   */\n  '--no-color'?: ''\n\n  /**\n   * Increase the verbosity of the logs.\n   */\n  '--verbose'?: ''\n\n  /**\n   * The path to your app directory.\n   */\n  '--path <value>'?: string\n\n  /**\n   * The name of the app configuration.\n   */\n  '-c, --config <value>'?: string\n\n  /**\n   * Skips the installation of dependencies. Deprecated, use workspaces instead.\n   */\n  '--skip-dependencies-installation'?: ''\n\n  /**\n   * Application's Client ID that will be exposed at build time.\n   */\n  '--client-id <value>'?: string\n}"
          }
        }
      }
    ],
    "category": "Commands",
    "subCategory": "app",
    "related": []
  },
  {
    "name": "app config link",
    "description": "Fetch your app configuration from the Partner Dashboard.",
    "overviewPreviewDescription": "Fetch your app configuration from the Partner Dashboard.",
    "type": "command",
    "isVisualComponent": false,
    "defaultExample": {
      "codeblock": {
        "tabs": [
          {
            "title": "app config link",
            "code": "no usage",
            "language": "bash"
          }
        ],
        "title": "app config link"
      }
    },
    "definitions": [
      {
        "title": "app config link",
        "description": "The following flags are available for the `app config link` command:",
        "type": "appconfiglink",
        "typeDefinitions": {
          "appconfiglink": {
            "filePath": "src-docs/interfaces/app-config-link.interface.ts",
            "name": "appconfiglink",
            "description": "",
            "members": [
              {
                "filePath": "src-docs/interfaces/app-config-link.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--no-color",
                "value": "\"\"",
                "description": "Disable color output.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-config-link.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--verbose",
                "value": "\"\"",
                "description": "Increase the verbosity of the logs.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-config-link.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--path <value>",
                "value": "string",
                "description": "The path to your app directory.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-config-link.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-c, --config <value>",
                "value": "string",
                "description": "The name of the app configuration.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-config-link.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--client-id <value>",
                "value": "string",
                "description": "The Client ID of your app.",
                "isOptional": true
              }
            ],
            "value": "export interface appconfiglink {\n  /**\n   * Disable color output.\n   */\n  '--no-color'?: ''\n\n  /**\n   * Increase the verbosity of the logs.\n   */\n  '--verbose'?: ''\n\n  /**\n   * The path to your app directory.\n   */\n  '--path <value>'?: string\n\n  /**\n   * The name of the app configuration.\n   */\n  '-c, --config <value>'?: string\n\n  /**\n   * The Client ID of your app.\n   */\n  '--client-id <value>'?: string\n}"
          }
        }
      }
    ],
    "category": "Commands",
    "subCategory": "app",
    "related": []
  },
  {
    "name": "app config push",
    "description": "Push your app configuration to the Partner Dashboard.",
    "overviewPreviewDescription": "Push your app configuration to the Partner Dashboard.",
    "type": "command",
    "isVisualComponent": false,
    "defaultExample": {
      "codeblock": {
        "tabs": [
          {
            "title": "app config push",
            "code": "no usage",
            "language": "bash"
          }
        ],
        "title": "app config push"
      }
    },
    "definitions": [
      {
        "title": "app config push",
        "description": "The following flags are available for the `app config push` command:",
        "type": "appconfigpush",
        "typeDefinitions": {
          "appconfigpush": {
            "filePath": "src-docs/interfaces/app-config-push.interface.ts",
            "name": "appconfigpush",
            "description": "",
            "members": [
              {
                "filePath": "src-docs/interfaces/app-config-push.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--no-color",
                "value": "\"\"",
                "description": "Disable color output.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-config-push.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--verbose",
                "value": "\"\"",
                "description": "Increase the verbosity of the logs.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-config-push.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--path <value>",
                "value": "string",
                "description": "The path to your app directory.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-config-push.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-c, --config <value>",
                "value": "string",
                "description": "The name of the app configuration.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-config-push.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-f, --force",
                "value": "\"\"",
                "description": "Push configuration without asking for confirmation.",
                "isOptional": true
              }
            ],
            "value": "export interface appconfigpush {\n  /**\n   * Disable color output.\n   */\n  '--no-color'?: ''\n\n  /**\n   * Increase the verbosity of the logs.\n   */\n  '--verbose'?: ''\n\n  /**\n   * The path to your app directory.\n   */\n  '--path <value>'?: string\n\n  /**\n   * The name of the app configuration.\n   */\n  '-c, --config <value>'?: string\n\n  /**\n   * Push configuration without asking for confirmation.\n   */\n  '-f, --force'?: ''\n}"
          }
        }
      }
    ],
    "category": "Commands",
    "subCategory": "app",
    "related": []
  },
  {
    "name": "app config use",
    "description": "Activate an app configuration.",
    "overviewPreviewDescription": "Activate an app configuration.",
    "type": "command",
    "isVisualComponent": false,
    "defaultExample": {
      "codeblock": {
        "tabs": [
          {
            "title": "app config use",
            "code": "no usage",
            "language": "bash"
          }
        ],
        "title": "app config use"
      }
    },
    "definitions": [
      {
        "title": "app config use",
        "description": "The following flags are available for the `app config use` command:",
        "type": "appconfiguse",
        "typeDefinitions": {
          "appconfiguse": {
            "filePath": "src-docs/interfaces/app-config-use.interface.ts",
            "name": "appconfiguse",
            "description": "",
            "members": [
              {
                "filePath": "src-docs/interfaces/app-config-use.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--no-color",
                "value": "\"\"",
                "description": "Disable color output.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-config-use.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--verbose",
                "value": "\"\"",
                "description": "Increase the verbosity of the logs.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-config-use.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--path <value>",
                "value": "string",
                "description": "The path to your app directory.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-config-use.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--reset",
                "value": "\"\"",
                "description": "Reset current configuration.",
                "isOptional": true
              }
            ],
            "value": "export interface appconfiguse {\n  /**\n   * Disable color output.\n   */\n  '--no-color'?: ''\n\n  /**\n   * Increase the verbosity of the logs.\n   */\n  '--verbose'?: ''\n\n  /**\n   * The path to your app directory.\n   */\n  '--path <value>'?: string\n\n  /**\n   * Reset current configuration.\n   */\n  '--reset'?: ''\n}"
          }
        }
      }
    ],
    "category": "Commands",
    "subCategory": "app",
    "related": []
  },
  {
    "name": "app deploy",
    "description": "Deploy your Shopify app.",
    "overviewPreviewDescription": "Deploy your Shopify app.",
    "type": "command",
    "isVisualComponent": false,
    "defaultExample": {
      "codeblock": {
        "tabs": [
          {
            "title": "app deploy",
            "code": "no usage",
            "language": "bash"
          }
        ],
        "title": "app deploy"
      }
    },
    "definitions": [
      {
        "title": "app deploy",
        "description": "The following flags are available for the `app deploy` command:",
        "type": "appdeploy",
        "typeDefinitions": {
          "appdeploy": {
            "filePath": "src-docs/interfaces/app-deploy.interface.ts",
            "name": "appdeploy",
            "description": "",
            "members": [
              {
                "filePath": "src-docs/interfaces/app-deploy.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--no-color",
                "value": "\"\"",
                "description": "Disable color output.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-deploy.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--verbose",
                "value": "\"\"",
                "description": "Increase the verbosity of the logs.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-deploy.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--path <value>",
                "value": "string",
                "description": "The path to your app directory.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-deploy.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-c, --config <value>",
                "value": "string",
                "description": "The name of the app configuration.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-deploy.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--client-id <value>",
                "value": "string",
                "description": "The Client ID of your app.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-deploy.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--reset",
                "value": "\"\"",
                "description": "Reset all your settings.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-deploy.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-f, --force",
                "value": "\"\"",
                "description": "Deploy without asking for confirmation.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-deploy.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--no-release",
                "value": "\"\"",
                "description": "Creates a version but doesn't release it - it's not made available to merchants.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-deploy.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--message <value>",
                "value": "string",
                "description": "Optional message that will be associated with this version. This is for internal use only and won't be available externally.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-deploy.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--version <value>",
                "value": "string",
                "description": "Optional version tag that will be associated with this app version. If not provided, an auto-generated identifier will be generated for this app version.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-deploy.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--source-control-url <value>",
                "value": "string",
                "description": "URL associated with the new app version.",
                "isOptional": true
              }
            ],
            "value": "export interface appdeploy {\n  /**\n   * Disable color output.\n   */\n  '--no-color'?: ''\n\n  /**\n   * Increase the verbosity of the logs.\n   */\n  '--verbose'?: ''\n\n  /**\n   * The path to your app directory.\n   */\n  '--path <value>'?: string\n\n  /**\n   * The name of the app configuration.\n   */\n  '-c, --config <value>'?: string\n\n  /**\n   * The Client ID of your app.\n   */\n  '--client-id <value>'?: string\n\n  /**\n   * Reset all your settings.\n   */\n  '--reset'?: ''\n\n  /**\n   * Deploy without asking for confirmation.\n   */\n  '-f, --force'?: ''\n\n  /**\n   * Creates a version but doesn't release it - it's not made available to merchants.\n   */\n  '--no-release'?: ''\n\n  /**\n   * Optional message that will be associated with this version. This is for internal use only and won't be available externally.\n   */\n  '--message <value>'?: string\n\n  /**\n   * Optional version tag that will be associated with this app version. If not provided, an auto-generated identifier will be generated for this app version.\n   */\n  '--version <value>'?: string\n\n  /**\n   * URL associated with the new app version.\n   */\n  '--source-control-url <value>'?: string\n}"
          }
        }
      }
    ],
    "category": "Commands",
    "subCategory": "app",
    "related": []
  },
  {
    "name": "app dev",
    "description": "[Builds the app](/docs/apps/tools/cli/commands#build) and lets you preview it on a [development store](/docs/apps/tools/development-stores) or [Plus sandbox store](https://help.shopify.com/partners/dashboard/managing-stores/plus-sandbox-store?shpxid=f75d4b9f-3CE2-4156-F28E-0364F1AF6ABB).\n\n  To preview your app on a development store or Plus sandbox store, Shopify CLI walks you through the following steps. If you've run `dev` before, then your settings are saved and some of these steps are skipped. You can reset these configurations using `dev --reset` to go through all of them again:\n\n- Associating your project with an app associated with your Partner account or organization, or creating a new app.\n- Selecting a development store or Plus sandbox store to use for testing. If you have only one store, then it's selected automatically.\n- Installing your app on the store using the provided install link.\n- Creating a tunnel between your local environment and the store using Cloudflare.\n\n  You can use your own tunneling software instead, by passing your tunnel URL with the `--tunnel-url` flag.\n- Updating the app URLs that are set in the Partner Dashboard.\n\n  To avoid overwriting any URLs that are already set, select the No, never option. If you select this option, then you're provided with URLs that you can manually add in the Partner Dashboard so you can preview your app.\n\n- Enabling development store preview for extensions.\n- Building and serving your app and app extensions.\n\nIf you're using the PHP or Ruby app template, then you need to complete the following steps before you can preview your app for the first time:\n\n- PHP: [Set up your Laravel app](https://github.com/Shopify/shopify-app-template-php#setting-up-your-laravel-app)\n- Ruby: [Set up your Rails app](https://github.com/Shopify/shopify-app-template-ruby#setting-up-your-rails-app)\n\n> Caution: To use a development store or Plus sandbox store with Shopify CLI, you need to be the store owner, or have a staff account on the store. Staff accounts are created automatically the first time you access a development store with your Partner staff account through the Partner Dashboard.\n  ",
    "overviewPreviewDescription": "Run the app.",
    "type": "command",
    "isVisualComponent": false,
    "defaultExample": {
      "codeblock": {
        "tabs": [
          {
            "title": "app dev",
            "code": "shopify app dev [flags]",
            "language": "bash"
          }
        ],
        "title": "app dev"
      }
    },
    "definitions": [
      {
        "title": "app dev",
        "description": "The following flags are available for the `app dev` command:",
        "type": "appdev",
        "typeDefinitions": {
          "appdev": {
            "filePath": "src-docs/interfaces/app-dev.interface.ts",
            "name": "appdev",
            "description": "",
            "members": [
              {
                "filePath": "src-docs/interfaces/app-dev.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--no-color",
                "value": "\"\"",
                "description": "Disable color output.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-dev.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--verbose",
                "value": "\"\"",
                "description": "Increase the verbosity of the logs.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-dev.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--path <value>",
                "value": "string",
                "description": "The path to your app directory.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-dev.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-c, --config <value>",
                "value": "string",
                "description": "The name of the app configuration.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-dev.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--client-id <value>",
                "value": "string",
                "description": "The Client ID of your app.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-dev.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-s, --store <value>",
                "value": "string",
                "description": "Store URL. Must be an existing development or Shopify Plus sandbox store.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-dev.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--reset",
                "value": "\"\"",
                "description": "Reset all your settings.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-dev.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--skip-dependencies-installation",
                "value": "\"\"",
                "description": "Skips the installation of dependencies. Deprecated, use workspaces instead.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-dev.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--no-update",
                "value": "\"\"",
                "description": "Skips the Partners Dashboard URL update step.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-dev.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--subscription-product-url <value>",
                "value": "string",
                "description": "Resource URL for subscription UI extension. Format: \"/products/{productId}\"",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-dev.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--checkout-cart-url <value>",
                "value": "string",
                "description": "Resource URL for checkout UI extension. Format: \"/cart/{productVariantID}:{productQuantity}\"",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-dev.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--tunnel-url <value>",
                "value": "string",
                "description": "Use a custom tunnel, it must be running before executing dev. Format: \"https://my-tunnel-url:port\".",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-dev.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-t, --theme <value>",
                "value": "string",
                "description": "Theme ID or name of the theme app extension host theme.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-dev.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--theme-app-extension-port <value>",
                "value": "string",
                "description": "Local port of the theme app extension development server.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-dev.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--notify <value>",
                "value": "string",
                "description": "The file path or URL. The file path is to a file that you want updated on idle. The URL path is where you want a webhook posted to report on file changes.",
                "isOptional": true
              }
            ],
            "value": "export interface appdev {\n  /**\n   * Disable color output.\n   */\n  '--no-color'?: ''\n\n  /**\n   * Increase the verbosity of the logs.\n   */\n  '--verbose'?: ''\n\n  /**\n   * The path to your app directory.\n   */\n  '--path <value>'?: string\n\n  /**\n   * The name of the app configuration.\n   */\n  '-c, --config <value>'?: string\n\n  /**\n   * The Client ID of your app.\n   */\n  '--client-id <value>'?: string\n\n  /**\n   * Store URL. Must be an existing development or Shopify Plus sandbox store.\n   */\n  '-s, --store <value>'?: string\n\n  /**\n   * Reset all your settings.\n   */\n  '--reset'?: ''\n\n  /**\n   * Skips the installation of dependencies. Deprecated, use workspaces instead.\n   */\n  '--skip-dependencies-installation'?: ''\n\n  /**\n   * Skips the Partners Dashboard URL update step.\n   */\n  '--no-update'?: ''\n\n  /**\n   * Resource URL for subscription UI extension. Format: \"/products/{productId}\"\n   */\n  '--subscription-product-url <value>'?: string\n\n  /**\n   * Resource URL for checkout UI extension. Format: \"/cart/{productVariantID}:{productQuantity}\"\n   */\n  '--checkout-cart-url <value>'?: string\n\n  /**\n   * Use a custom tunnel, it must be running before executing dev. Format: \"https://my-tunnel-url:port\".\n   */\n  '--tunnel-url <value>'?: string\n\n  /**\n   * Theme ID or name of the theme app extension host theme.\n   */\n  '-t, --theme <value>'?: string\n\n  /**\n   * Local port of the theme app extension development server.\n   */\n  '--theme-app-extension-port <value>'?: string\n\n  /**\n   * The file path or URL. The file path is to a file that you want updated on idle. The URL path is where you want a webhook posted to report on file changes.\n   */\n  '--notify <value>'?: string\n}"
          }
        }
      }
    ],
    "category": "Commands",
    "subCategory": "app",
    "related": []
  },
  {
    "name": "app env pull",
    "description": "Pull app and extensions environment variables.",
    "overviewPreviewDescription": "Pull app and extensions environment variables.",
    "type": "command",
    "isVisualComponent": false,
    "defaultExample": {
      "codeblock": {
        "tabs": [
          {
            "title": "app env pull",
            "code": "no usage",
            "language": "bash"
          }
        ],
        "title": "app env pull"
      }
    },
    "definitions": [
      {
        "title": "app env pull",
        "description": "The following flags are available for the `app env pull` command:",
        "type": "appenvpull",
        "typeDefinitions": {
          "appenvpull": {
            "filePath": "src-docs/interfaces/app-env-pull.interface.ts",
            "name": "appenvpull",
            "description": "",
            "members": [
              {
                "filePath": "src-docs/interfaces/app-env-pull.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--no-color",
                "value": "\"\"",
                "description": "Disable color output.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-env-pull.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--verbose",
                "value": "\"\"",
                "description": "Increase the verbosity of the logs.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-env-pull.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--path <value>",
                "value": "string",
                "description": "The path to your app directory.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-env-pull.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-c, --config <value>",
                "value": "string",
                "description": "The name of the app configuration.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-env-pull.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--env-file <value>",
                "value": "string",
                "description": "Specify an environment file to update if the update flag is set",
                "isOptional": true
              }
            ],
            "value": "export interface appenvpull {\n  /**\n   * Disable color output.\n   */\n  '--no-color'?: ''\n\n  /**\n   * Increase the verbosity of the logs.\n   */\n  '--verbose'?: ''\n\n  /**\n   * The path to your app directory.\n   */\n  '--path <value>'?: string\n\n  /**\n   * The name of the app configuration.\n   */\n  '-c, --config <value>'?: string\n\n  /**\n   * Specify an environment file to update if the update flag is set\n   */\n  '--env-file <value>'?: string\n}"
          }
        }
      }
    ],
    "category": "Commands",
    "subCategory": "app",
    "related": []
  },
  {
    "name": "app env show",
    "description": "Display app and extensions environment variables.",
    "overviewPreviewDescription": "Display app and extensions environment variables.",
    "type": "command",
    "isVisualComponent": false,
    "defaultExample": {
      "codeblock": {
        "tabs": [
          {
            "title": "app env show",
            "code": "no usage",
            "language": "bash"
          }
        ],
        "title": "app env show"
      }
    },
    "definitions": [
      {
        "title": "app env show",
        "description": "The following flags are available for the `app env show` command:",
        "type": "appenvshow",
        "typeDefinitions": {
          "appenvshow": {
            "filePath": "src-docs/interfaces/app-env-show.interface.ts",
            "name": "appenvshow",
            "description": "",
            "members": [
              {
                "filePath": "src-docs/interfaces/app-env-show.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--no-color",
                "value": "\"\"",
                "description": "Disable color output.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-env-show.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--verbose",
                "value": "\"\"",
                "description": "Increase the verbosity of the logs.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-env-show.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--path <value>",
                "value": "string",
                "description": "The path to your app directory.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-env-show.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-c, --config <value>",
                "value": "string",
                "description": "The name of the app configuration.",
                "isOptional": true
              }
            ],
            "value": "export interface appenvshow {\n  /**\n   * Disable color output.\n   */\n  '--no-color'?: ''\n\n  /**\n   * Increase the verbosity of the logs.\n   */\n  '--verbose'?: ''\n\n  /**\n   * The path to your app directory.\n   */\n  '--path <value>'?: string\n\n  /**\n   * The name of the app configuration.\n   */\n  '-c, --config <value>'?: string\n}"
          }
        }
      }
    ],
    "category": "Commands",
    "subCategory": "app",
    "related": []
  },
  {
    "name": "app function build",
    "description": "Compile a function to wasm.",
    "overviewPreviewDescription": "Compile a function to wasm.",
    "type": "command",
    "isVisualComponent": false,
    "defaultExample": {
      "codeblock": {
        "tabs": [
          {
            "title": "app function build",
            "code": "no usage",
            "language": "bash"
          }
        ],
        "title": "app function build"
      }
    },
    "definitions": [
      {
        "title": "app function build",
        "description": "The following flags are available for the `app function build` command:",
        "type": "appfunctionbuild",
        "typeDefinitions": {
          "appfunctionbuild": {
            "filePath": "src-docs/interfaces/app-function-build.interface.ts",
            "name": "appfunctionbuild",
            "description": "",
            "members": [
              {
                "filePath": "src-docs/interfaces/app-function-build.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--no-color",
                "value": "\"\"",
                "description": "Disable color output.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-function-build.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--verbose",
                "value": "\"\"",
                "description": "Increase the verbosity of the logs.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-function-build.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--path <value>",
                "value": "string",
                "description": "The path to your function directory.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-function-build.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-c, --config <value>",
                "value": "string",
                "description": "The name of the app configuration.",
                "isOptional": true
              }
            ],
            "value": "export interface appfunctionbuild {\n  /**\n   * Disable color output.\n   */\n  '--no-color'?: ''\n\n  /**\n   * Increase the verbosity of the logs.\n   */\n  '--verbose'?: ''\n\n  /**\n   * The path to your function directory.\n   */\n  '--path <value>'?: string\n\n  /**\n   * The name of the app configuration.\n   */\n  '-c, --config <value>'?: string\n}"
          }
        }
      }
    ],
    "category": "Commands",
    "subCategory": "app",
    "related": []
  },
  {
    "name": "app function run",
    "description": "Run a function locally for testing.",
    "overviewPreviewDescription": "Run a function locally for testing.",
    "type": "command",
    "isVisualComponent": false,
    "defaultExample": {
      "codeblock": {
        "tabs": [
          {
            "title": "app function run",
            "code": "no usage",
            "language": "bash"
          }
        ],
        "title": "app function run"
      }
    },
    "definitions": [
      {
        "title": "app function run",
        "description": "The following flags are available for the `app function run` command:",
        "type": "appfunctionrun",
        "typeDefinitions": {
          "appfunctionrun": {
            "filePath": "src-docs/interfaces/app-function-run.interface.ts",
            "name": "appfunctionrun",
            "description": "",
            "members": [
              {
                "filePath": "src-docs/interfaces/app-function-run.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--no-color",
                "value": "\"\"",
                "description": "Disable color output.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-function-run.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--verbose",
                "value": "\"\"",
                "description": "Increase the verbosity of the logs.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-function-run.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--path <value>",
                "value": "string",
                "description": "The path to your function directory.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-function-run.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-c, --config <value>",
                "value": "string",
                "description": "The name of the app configuration.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-function-run.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-i, --input <value>",
                "value": "string",
                "description": "The input JSON to pass to the function. If omitted, standard input is used.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-function-run.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-e, --export <value>",
                "value": "string",
                "description": "Name of the wasm export to invoke.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-function-run.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-j, --json",
                "value": "\"\"",
                "description": "Log the run result as a JSON object.",
                "isOptional": true
              }
            ],
            "value": "export interface appfunctionrun {\n  /**\n   * Disable color output.\n   */\n  '--no-color'?: ''\n\n  /**\n   * Increase the verbosity of the logs.\n   */\n  '--verbose'?: ''\n\n  /**\n   * The path to your function directory.\n   */\n  '--path <value>'?: string\n\n  /**\n   * The name of the app configuration.\n   */\n  '-c, --config <value>'?: string\n\n  /**\n   * The input JSON to pass to the function. If omitted, standard input is used.\n   */\n  '-i, --input <value>'?: string\n\n  /**\n   * Name of the wasm export to invoke.\n   */\n  '-e, --export <value>'?: string\n\n  /**\n   * Log the run result as a JSON object.\n   */\n  '-j, --json'?: ''\n}"
          }
        }
      }
    ],
    "category": "Commands",
    "subCategory": "app",
    "related": []
  },
  {
    "name": "app function schema",
    "description": "Fetch the latest GraphQL schema for a function.",
    "overviewPreviewDescription": "Fetch the latest GraphQL schema for a function.",
    "type": "command",
    "isVisualComponent": false,
    "defaultExample": {
      "codeblock": {
        "tabs": [
          {
            "title": "app function schema",
            "code": "no usage",
            "language": "bash"
          }
        ],
        "title": "app function schema"
      }
    },
    "definitions": [
      {
        "title": "app function schema",
        "description": "The following flags are available for the `app function schema` command:",
        "type": "appfunctionschema",
        "typeDefinitions": {
          "appfunctionschema": {
            "filePath": "src-docs/interfaces/app-function-schema.interface.ts",
            "name": "appfunctionschema",
            "description": "",
            "members": [
              {
                "filePath": "src-docs/interfaces/app-function-schema.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--no-color",
                "value": "\"\"",
                "description": "Disable color output.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-function-schema.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--verbose",
                "value": "\"\"",
                "description": "Increase the verbosity of the logs.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-function-schema.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--path <value>",
                "value": "string",
                "description": "The path to your function directory.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-function-schema.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-c, --config <value>",
                "value": "string",
                "description": "The name of the app configuration.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-function-schema.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--client-id <value>",
                "value": "string",
                "description": "The Client ID to fetch the schema with.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-function-schema.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--stdout",
                "value": "\"\"",
                "description": "Output the schema to stdout instead of writing to a file.",
                "isOptional": true
              }
            ],
            "value": "export interface appfunctionschema {\n  /**\n   * Disable color output.\n   */\n  '--no-color'?: ''\n\n  /**\n   * Increase the verbosity of the logs.\n   */\n  '--verbose'?: ''\n\n  /**\n   * The path to your function directory.\n   */\n  '--path <value>'?: string\n\n  /**\n   * The name of the app configuration.\n   */\n  '-c, --config <value>'?: string\n\n  /**\n   * The Client ID to fetch the schema with.\n   */\n  '--client-id <value>'?: string\n\n  /**\n   * Output the schema to stdout instead of writing to a file.\n   */\n  '--stdout'?: ''\n}"
          }
        }
      }
    ],
    "category": "Commands",
    "subCategory": "app",
    "related": []
  },
  {
    "name": "app function typegen",
    "description": "Generate GraphQL types for a JavaScript function.",
    "overviewPreviewDescription": "Generate GraphQL types for a JavaScript function.",
    "type": "command",
    "isVisualComponent": false,
    "defaultExample": {
      "codeblock": {
        "tabs": [
          {
            "title": "app function typegen",
            "code": "no usage",
            "language": "bash"
          }
        ],
        "title": "app function typegen"
      }
    },
    "definitions": [
      {
        "title": "app function typegen",
        "description": "The following flags are available for the `app function typegen` command:",
        "type": "appfunctiontypegen",
        "typeDefinitions": {
          "appfunctiontypegen": {
            "filePath": "src-docs/interfaces/app-function-typegen.interface.ts",
            "name": "appfunctiontypegen",
            "description": "",
            "members": [
              {
                "filePath": "src-docs/interfaces/app-function-typegen.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--no-color",
                "value": "\"\"",
                "description": "Disable color output.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-function-typegen.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--verbose",
                "value": "\"\"",
                "description": "Increase the verbosity of the logs.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-function-typegen.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--path <value>",
                "value": "string",
                "description": "The path to your function directory.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-function-typegen.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-c, --config <value>",
                "value": "string",
                "description": "The name of the app configuration.",
                "isOptional": true
              }
            ],
            "value": "export interface appfunctiontypegen {\n  /**\n   * Disable color output.\n   */\n  '--no-color'?: ''\n\n  /**\n   * Increase the verbosity of the logs.\n   */\n  '--verbose'?: ''\n\n  /**\n   * The path to your function directory.\n   */\n  '--path <value>'?: string\n\n  /**\n   * The name of the app configuration.\n   */\n  '-c, --config <value>'?: string\n}"
          }
        }
      }
    ],
    "category": "Commands",
    "subCategory": "app",
    "related": []
  },
  {
    "name": "app generate extension",
    "description": "Scaffold an Extension.",
    "overviewPreviewDescription": "Scaffold an Extension.",
    "type": "command",
    "isVisualComponent": false,
    "defaultExample": {
      "codeblock": {
        "tabs": [
          {
            "title": "app generate extension",
            "code": "no usage",
            "language": "bash"
          }
        ],
        "title": "app generate extension"
      }
    },
    "definitions": [
      {
        "title": "app generate extension",
        "description": "The following flags are available for the `app generate extension` command:",
        "type": "appgenerateextension",
        "typeDefinitions": {
          "appgenerateextension": {
            "filePath": "src-docs/interfaces/app-generate-extension.interface.ts",
            "name": "appgenerateextension",
            "description": "",
            "members": [
              {
                "filePath": "src-docs/interfaces/app-generate-extension.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--no-color",
                "value": "\"\"",
                "description": "Disable color output.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-generate-extension.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--verbose",
                "value": "\"\"",
                "description": "Increase the verbosity of the logs.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-generate-extension.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--path <value>",
                "value": "string",
                "description": "The path to your app directory.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-generate-extension.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-c, --config <value>",
                "value": "string",
                "description": "The name of the app configuration.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-generate-extension.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-t, --type <value>",
                "value": "string",
                "description": "Deprecated. Please use --template",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-generate-extension.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-t, --template <value>",
                "value": "string",
                "description": "Extension template",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-generate-extension.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-n, --name <value>",
                "value": "string",
                "description": "name of your Extension",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-generate-extension.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--flavor <value>",
                "value": "string",
                "description": "Choose a starting template for your extension, where applicable",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-generate-extension.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--reset",
                "value": "\"\"",
                "description": "Reset all your settings.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-generate-extension.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--client-id <value>",
                "value": "string",
                "description": "The Client ID of your app.",
                "isOptional": true
              }
            ],
            "value": "export interface appgenerateextension {\n  /**\n   * Disable color output.\n   */\n  '--no-color'?: ''\n\n  /**\n   * Increase the verbosity of the logs.\n   */\n  '--verbose'?: ''\n\n  /**\n   * The path to your app directory.\n   */\n  '--path <value>'?: string\n\n  /**\n   * The name of the app configuration.\n   */\n  '-c, --config <value>'?: string\n\n  /**\n   * Deprecated. Please use --template\n   */\n  '-t, --type <value>'?: string\n\n  /**\n   * Extension template\n   */\n  '-t, --template <value>'?: string\n\n  /**\n   * name of your Extension\n   */\n  '-n, --name <value>'?: string\n\n  /**\n   * Choose a starting template for your extension, where applicable\n   */\n  '--flavor <value>'?: string\n\n  /**\n   * Reset all your settings.\n   */\n  '--reset'?: ''\n\n  /**\n   * The Client ID of your app.\n   */\n  '--client-id <value>'?: string\n}"
          }
        }
      }
    ],
    "category": "Commands",
    "subCategory": "app",
    "related": []
  },
  {
    "name": "app generate schema",
    "description": "Fetch the latest GraphQL schema for a function.",
    "overviewPreviewDescription": "Fetch the latest GraphQL schema for a function.",
    "type": "command",
    "isVisualComponent": false,
    "defaultExample": {
      "codeblock": {
        "tabs": [
          {
            "title": "app generate schema",
            "code": "no usage",
            "language": "bash"
          }
        ],
        "title": "app generate schema"
      }
    },
    "definitions": [
      {
        "title": "app generate schema",
        "description": "The following flags are available for the `app generate schema` command:",
        "type": "appgenerateschema",
        "typeDefinitions": {
          "appgenerateschema": {
            "filePath": "src-docs/interfaces/app-generate-schema.interface.ts",
            "name": "appgenerateschema",
            "description": "",
            "members": [
              {
                "filePath": "src-docs/interfaces/app-generate-schema.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--no-color",
                "value": "\"\"",
                "description": "Disable color output.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-generate-schema.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--verbose",
                "value": "\"\"",
                "description": "Increase the verbosity of the logs.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-generate-schema.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--path <value>",
                "value": "string",
                "description": "The path to your function directory.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-generate-schema.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-c, --config <value>",
                "value": "string",
                "description": "The name of the app configuration.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-generate-schema.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--client-id <value>",
                "value": "string",
                "description": "The Client ID to fetch the schema with.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-generate-schema.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--stdout",
                "value": "\"\"",
                "description": "Output the schema to stdout instead of writing to a file.",
                "isOptional": true
              }
            ],
            "value": "export interface appgenerateschema {\n  /**\n   * Disable color output.\n   */\n  '--no-color'?: ''\n\n  /**\n   * Increase the verbosity of the logs.\n   */\n  '--verbose'?: ''\n\n  /**\n   * The path to your function directory.\n   */\n  '--path <value>'?: string\n\n  /**\n   * The name of the app configuration.\n   */\n  '-c, --config <value>'?: string\n\n  /**\n   * The Client ID to fetch the schema with.\n   */\n  '--client-id <value>'?: string\n\n  /**\n   * Output the schema to stdout instead of writing to a file.\n   */\n  '--stdout'?: ''\n}"
          }
        }
      }
    ],
    "category": "Commands",
    "subCategory": "app",
    "related": []
  },
  {
    "name": "app import-flow-legacy-extensions",
    "description": "Import dashboard-managed flow extensions into your app.",
    "overviewPreviewDescription": "Import dashboard-managed flow extensions into your app.",
    "type": "command",
    "isVisualComponent": false,
    "defaultExample": {
      "codeblock": {
        "tabs": [
          {
            "title": "app import-flow-legacy-extensions",
            "code": "no usage",
            "language": "bash"
          }
        ],
        "title": "app import-flow-legacy-extensions"
      }
    },
    "definitions": [
      {
        "title": "app import-flow-legacy-extensions",
        "description": "The following flags are available for the `app import-flow-legacy-extensions` command:",
        "type": "appimportflowlegacyextensions",
        "typeDefinitions": {
          "appimportflowlegacyextensions": {
            "filePath": "src-docs/interfaces/app-import-flow-legacy-extensions.interface.ts",
            "name": "appimportflowlegacyextensions",
            "description": "",
            "members": [
              {
                "filePath": "src-docs/interfaces/app-import-flow-legacy-extensions.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--no-color",
                "value": "\"\"",
                "description": "Disable color output.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-import-flow-legacy-extensions.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--verbose",
                "value": "\"\"",
                "description": "Increase the verbosity of the logs.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-import-flow-legacy-extensions.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--path <value>",
                "value": "string",
                "description": "The path to your app directory.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-import-flow-legacy-extensions.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-c, --config <value>",
                "value": "string",
                "description": "The name of the app configuration.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-import-flow-legacy-extensions.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--client-id <value>",
                "value": "string",
                "description": "The Client ID of your app.",
                "isOptional": true
              }
            ],
            "value": "export interface appimportflowlegacyextensions {\n  /**\n   * Disable color output.\n   */\n  '--no-color'?: ''\n\n  /**\n   * Increase the verbosity of the logs.\n   */\n  '--verbose'?: ''\n\n  /**\n   * The path to your app directory.\n   */\n  '--path <value>'?: string\n\n  /**\n   * The name of the app configuration.\n   */\n  '-c, --config <value>'?: string\n\n  /**\n   * The Client ID of your app.\n   */\n  '--client-id <value>'?: string\n}"
          }
        }
      }
    ],
    "category": "Commands",
    "subCategory": "app",
    "related": []
  },
  {
    "name": "app info",
    "description": "Print basic information about your app and extensions.",
    "overviewPreviewDescription": "Print basic information about your app and extensions.",
    "type": "command",
    "isVisualComponent": false,
    "defaultExample": {
      "codeblock": {
        "tabs": [
          {
            "title": "app info",
            "code": "no usage",
            "language": "bash"
          }
        ],
        "title": "app info"
      }
    },
    "definitions": [
      {
        "title": "app info",
        "description": "The following flags are available for the `app info` command:",
        "type": "appinfo",
        "typeDefinitions": {
          "appinfo": {
            "filePath": "src-docs/interfaces/app-info.interface.ts",
            "name": "appinfo",
            "description": "",
            "members": [
              {
                "filePath": "src-docs/interfaces/app-info.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--no-color",
                "value": "\"\"",
                "description": "Disable color output.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-info.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--verbose",
                "value": "\"\"",
                "description": "Increase the verbosity of the logs.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-info.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--path <value>",
                "value": "string",
                "description": "The path to your app directory.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-info.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-c, --config <value>",
                "value": "string",
                "description": "The name of the app configuration.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-info.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--json",
                "value": "\"\"",
                "description": "format output as JSON",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-info.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--web-env",
                "value": "\"\"",
                "description": "Outputs environment variables necessary for running and deploying web/.",
                "isOptional": true
              }
            ],
            "value": "export interface appinfo {\n  /**\n   * Disable color output.\n   */\n  '--no-color'?: ''\n\n  /**\n   * Increase the verbosity of the logs.\n   */\n  '--verbose'?: ''\n\n  /**\n   * The path to your app directory.\n   */\n  '--path <value>'?: string\n\n  /**\n   * The name of the app configuration.\n   */\n  '-c, --config <value>'?: string\n\n  /**\n   * format output as JSON\n   */\n  '--json'?: ''\n\n  /**\n   * Outputs environment variables necessary for running and deploying web/.\n   */\n  '--web-env'?: ''\n}"
          }
        }
      }
    ],
    "category": "Commands",
    "subCategory": "app",
    "related": []
  },
  {
    "name": "app release",
    "description": "Release an app version.",
    "overviewPreviewDescription": "Release an app version.",
    "type": "command",
    "isVisualComponent": false,
    "defaultExample": {
      "codeblock": {
        "tabs": [
          {
            "title": "app release",
            "code": "no usage",
            "language": "bash"
          }
        ],
        "title": "app release"
      }
    },
    "definitions": [
      {
        "title": "app release",
        "description": "The following flags are available for the `app release` command:",
        "type": "apprelease",
        "typeDefinitions": {
          "apprelease": {
            "filePath": "src-docs/interfaces/app-release.interface.ts",
            "name": "apprelease",
            "description": "",
            "members": [
              {
                "filePath": "src-docs/interfaces/app-release.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--no-color",
                "value": "\"\"",
                "description": "Disable color output.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-release.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--verbose",
                "value": "\"\"",
                "description": "Increase the verbosity of the logs.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-release.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--path <value>",
                "value": "string",
                "description": "The path to your app directory.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-release.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-c, --config <value>",
                "value": "string",
                "description": "The name of the app configuration.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-release.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--client-id <value>",
                "value": "string",
                "description": "The Client ID of your app.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-release.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--reset",
                "value": "\"\"",
                "description": "Reset all your settings.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-release.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-f, --force",
                "value": "\"\"",
                "description": "Release without asking for confirmation.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-release.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--version <value>",
                "value": "string",
                "description": "The name of the app version to release."
              }
            ],
            "value": "export interface apprelease {\n  /**\n   * Disable color output.\n   */\n  '--no-color'?: ''\n\n  /**\n   * Increase the verbosity of the logs.\n   */\n  '--verbose'?: ''\n\n  /**\n   * The path to your app directory.\n   */\n  '--path <value>'?: string\n\n  /**\n   * The name of the app configuration.\n   */\n  '-c, --config <value>'?: string\n\n  /**\n   * The Client ID of your app.\n   */\n  '--client-id <value>'?: string\n\n  /**\n   * Reset all your settings.\n   */\n  '--reset'?: ''\n\n  /**\n   * Release without asking for confirmation.\n   */\n  '-f, --force'?: ''\n\n  /**\n   * The name of the app version to release.\n   */\n  '--version <value>': string\n}"
          }
        }
      }
    ],
    "category": "Commands",
    "subCategory": "app",
    "related": []
  },
  {
    "name": "app update-url",
    "description": "Update your app and redirect URLs in the Partners Dashboard.",
    "overviewPreviewDescription": "Update your app and redirect URLs in the Partners Dashboard.",
    "type": "command",
    "isVisualComponent": false,
    "defaultExample": {
      "codeblock": {
        "tabs": [
          {
            "title": "app update-url",
            "code": "no usage",
            "language": "bash"
          }
        ],
        "title": "app update-url"
      }
    },
    "definitions": [
      {
        "title": "app update-url",
        "description": "The following flags are available for the `app update-url` command:",
        "type": "appupdateurl",
        "typeDefinitions": {
          "appupdateurl": {
            "filePath": "src-docs/interfaces/app-update-url.interface.ts",
            "name": "appupdateurl",
            "description": "",
            "members": [
              {
                "filePath": "src-docs/interfaces/app-update-url.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--no-color",
                "value": "\"\"",
                "description": "Disable color output.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-update-url.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--verbose",
                "value": "\"\"",
                "description": "Increase the verbosity of the logs.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-update-url.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--path <value>",
                "value": "string",
                "description": "The path to your app directory.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-update-url.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-c, --config <value>",
                "value": "string",
                "description": "The name of the app configuration.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-update-url.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--client-id <value>",
                "value": "string",
                "description": "The Client ID of your app.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-update-url.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--app-url <value>",
                "value": "string",
                "description": "URL through which merchants will access your app.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-update-url.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--redirect-urls <value>",
                "value": "string",
                "description": "Comma separated list of allowed URLs where merchants are redirected after the app is installed",
                "isOptional": true
              }
            ],
            "value": "export interface appupdateurl {\n  /**\n   * Disable color output.\n   */\n  '--no-color'?: ''\n\n  /**\n   * Increase the verbosity of the logs.\n   */\n  '--verbose'?: ''\n\n  /**\n   * The path to your app directory.\n   */\n  '--path <value>'?: string\n\n  /**\n   * The name of the app configuration.\n   */\n  '-c, --config <value>'?: string\n\n  /**\n   * The Client ID of your app.\n   */\n  '--client-id <value>'?: string\n\n  /**\n   * URL through which merchants will access your app.\n   */\n  '--app-url <value>'?: string\n\n  /**\n   * Comma separated list of allowed URLs where merchants are redirected after the app is installed\n   */\n  '--redirect-urls <value>'?: string\n}"
          }
        }
      }
    ],
    "category": "Commands",
    "subCategory": "app",
    "related": []
  },
  {
    "name": "app versions list",
    "description": "List deployed versions of your app.",
    "overviewPreviewDescription": "List deployed versions of your app.",
    "type": "command",
    "isVisualComponent": false,
    "defaultExample": {
      "codeblock": {
        "tabs": [
          {
            "title": "app versions list",
            "code": "no usage",
            "language": "bash"
          }
        ],
        "title": "app versions list"
      }
    },
    "definitions": [
      {
        "title": "app versions list",
        "description": "The following flags are available for the `app versions list` command:",
        "type": "appversionslist",
        "typeDefinitions": {
          "appversionslist": {
            "filePath": "src-docs/interfaces/app-versions-list.interface.ts",
            "name": "appversionslist",
            "description": "",
            "members": [
              {
                "filePath": "src-docs/interfaces/app-versions-list.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--no-color",
                "value": "\"\"",
                "description": "Disable color output.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-versions-list.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--verbose",
                "value": "\"\"",
                "description": "Increase the verbosity of the logs.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-versions-list.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--path <value>",
                "value": "string",
                "description": "The path to your app directory.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-versions-list.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-c, --config <value>",
                "value": "string",
                "description": "The name of the app configuration.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-versions-list.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--client-id <value>",
                "value": "string",
                "description": "The Client ID to fetch versions for.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/app-versions-list.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--json",
                "value": "\"\"",
                "description": "Output the versions list as JSON.",
                "isOptional": true
              }
            ],
            "value": "export interface appversionslist {\n  /**\n   * Disable color output.\n   */\n  '--no-color'?: ''\n\n  /**\n   * Increase the verbosity of the logs.\n   */\n  '--verbose'?: ''\n\n  /**\n   * The path to your app directory.\n   */\n  '--path <value>'?: string\n\n  /**\n   * The name of the app configuration.\n   */\n  '-c, --config <value>'?: string\n\n  /**\n   * The Client ID to fetch versions for.\n   */\n  '--client-id <value>'?: string\n\n  /**\n   * Output the versions list as JSON.\n   */\n  '--json'?: ''\n}"
          }
        }
      }
    ],
    "category": "Commands",
    "subCategory": "app",
    "related": []
  },
  {
    "name": "auth logout",
    "description": "Logout from Shopify.",
    "overviewPreviewDescription": "Logout from Shopify.",
    "type": "command",
    "isVisualComponent": false,
    "defaultExample": {
      "codeblock": {
        "tabs": [
          {
            "title": "auth logout",
            "code": "no usage",
            "language": "bash"
          }
        ],
        "title": "auth logout"
      }
    },
    "definitions": [
      {
        "title": "auth logout",
        "description": "The following flags are available for the `auth logout` command:",
        "type": "authlogout",
        "typeDefinitions": {
          "authlogout": {
            "filePath": "src-docs/interfaces/auth-logout.interface.ts",
            "name": "authlogout",
            "description": "",
            "members": [],
            "value": "export interface authlogout {\n\n}"
          }
        }
      }
    ],
    "category": "Commands",
    "subCategory": "auth",
    "related": []
  },
  {
    "name": "commands",
    "description": "list all the commands",
    "overviewPreviewDescription": "list all the commands",
    "type": "command",
    "isVisualComponent": false,
    "defaultExample": {
      "codeblock": {
        "tabs": [
          {
            "title": "commands",
            "code": "no usage",
            "language": "bash"
          }
        ],
        "title": "commands"
      }
    },
    "definitions": [
      {
        "title": "commands",
        "description": "The following flags are available for the `commands` command:",
        "type": "commands",
        "typeDefinitions": {
          "commands": {
            "filePath": "src-docs/interfaces/commands.interface.ts",
            "name": "commands",
            "description": "",
            "members": [
              {
                "filePath": "src-docs/interfaces/commands.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--json",
                "value": "\"\"",
                "description": "Format output as json.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/commands.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-h, --help",
                "value": "\"\"",
                "description": "Show CLI help.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/commands.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--hidden",
                "value": "\"\"",
                "description": "show hidden commands",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/commands.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--tree",
                "value": "\"\"",
                "description": "show tree of commands",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/commands.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--columns <value>",
                "value": "string",
                "description": "only show provided columns (comma-separated)",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/commands.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--sort <value>",
                "value": "string",
                "description": "property to sort by (prepend '-' for descending)",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/commands.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--filter <value>",
                "value": "string",
                "description": "filter property by partial string matching, ex: name=foo",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/commands.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--csv",
                "value": "\"\"",
                "description": "output is csv format [alias: --output=csv]",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/commands.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--output <value>",
                "value": "string",
                "description": "output in a more machine friendly format",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/commands.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-x, --extended",
                "value": "\"\"",
                "description": "show extra columns",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/commands.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--no-truncate",
                "value": "\"\"",
                "description": "do not truncate output to fit screen",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/commands.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--no-header",
                "value": "\"\"",
                "description": "hide table header from output",
                "isOptional": true
              }
            ],
            "value": "export interface commands {\n  /**\n   * Format output as json.\n   */\n  '--json'?: ''\n\n  /**\n   * Show CLI help.\n   */\n  '-h, --help'?: ''\n\n  /**\n   * show hidden commands\n   */\n  '--hidden'?: ''\n\n  /**\n   * show tree of commands\n   */\n  '--tree'?: ''\n\n  /**\n   * only show provided columns (comma-separated)\n   */\n  '--columns <value>'?: string\n\n  /**\n   * property to sort by (prepend '-' for descending)\n   */\n  '--sort <value>'?: string\n\n  /**\n   * filter property by partial string matching, ex: name=foo\n   */\n  '--filter <value>'?: string\n\n  /**\n   * output is csv format [alias: --output=csv]\n   */\n  '--csv'?: ''\n\n  /**\n   * output in a more machine friendly format\n   */\n  '--output <value>'?: string\n\n  /**\n   * show extra columns\n   */\n  '-x, --extended'?: ''\n\n  /**\n   * do not truncate output to fit screen\n   */\n  '--no-truncate'?: ''\n\n  /**\n   * hide table header from output\n   */\n  '--no-header'?: ''\n}"
          }
        }
      }
    ],
    "category": "Commands",
    "subCategory": "common",
    "related": []
  },
  {
    "name": "config autocorrect off",
    "description": "Disable autocorrect.",
    "overviewPreviewDescription": "Disable autocorrect.",
    "type": "command",
    "isVisualComponent": false,
    "defaultExample": {
      "codeblock": {
        "tabs": [
          {
            "title": "config autocorrect off",
            "code": "shopify config autocorrect off",
            "language": "bash"
          }
        ],
        "title": "config autocorrect off"
      }
    },
    "definitions": [
      {
        "title": "config autocorrect off",
        "description": "The following flags are available for the `config autocorrect off` command:",
        "type": "configautocorrectoff",
        "typeDefinitions": {
          "configautocorrectoff": {
            "filePath": "src-docs/interfaces/config-autocorrect-off.interface.ts",
            "name": "configautocorrectoff",
            "description": "",
            "members": [],
            "value": "export interface configautocorrectoff {\n\n}"
          }
        }
      }
    ],
    "category": "Commands",
    "subCategory": "config",
    "related": []
  },
  {
    "name": "config autocorrect on",
    "description": "Enable autocorrect.  By default is on.",
    "overviewPreviewDescription": "Enable autocorrect.  By default is on.",
    "type": "command",
    "isVisualComponent": false,
    "defaultExample": {
      "codeblock": {
        "tabs": [
          {
            "title": "config autocorrect on",
            "code": "shopify config autocorrect on",
            "language": "bash"
          }
        ],
        "title": "config autocorrect on"
      }
    },
    "definitions": [
      {
        "title": "config autocorrect on",
        "description": "The following flags are available for the `config autocorrect on` command:",
        "type": "configautocorrecton",
        "typeDefinitions": {
          "configautocorrecton": {
            "filePath": "src-docs/interfaces/config-autocorrect-on.interface.ts",
            "name": "configautocorrecton",
            "description": "",
            "members": [],
            "value": "export interface configautocorrecton {\n\n}"
          }
        }
      }
    ],
    "category": "Commands",
    "subCategory": "config",
    "related": []
  },
  {
    "name": "config autocorrect status",
    "description": "Check autocorrect current status. On by default.",
    "overviewPreviewDescription": "Check autocorrect current status. On by default.",
    "type": "command",
    "isVisualComponent": false,
    "defaultExample": {
      "codeblock": {
        "tabs": [
          {
            "title": "config autocorrect status",
            "code": "shopify config autocorrect status",
            "language": "bash"
          }
        ],
        "title": "config autocorrect status"
      }
    },
    "definitions": [
      {
        "title": "config autocorrect status",
        "description": "The following flags are available for the `config autocorrect status` command:",
        "type": "configautocorrectstatus",
        "typeDefinitions": {
          "configautocorrectstatus": {
            "filePath": "src-docs/interfaces/config-autocorrect-status.interface.ts",
            "name": "configautocorrectstatus",
            "description": "",
            "members": [],
            "value": "export interface configautocorrectstatus {\n\n}"
          }
        }
      }
    ],
    "category": "Commands",
    "subCategory": "config",
    "related": []
  },
  {
    "name": "help",
    "description": "Display help for <%= config.bin %>.",
    "overviewPreviewDescription": "Display help for <%= config.bin %>.",
    "type": "command",
    "isVisualComponent": false,
    "defaultExample": {
      "codeblock": {
        "tabs": [
          {
            "title": "help",
            "code": "no usage",
            "language": "bash"
          }
        ],
        "title": "help"
      }
    },
    "definitions": [
      {
        "title": "help",
        "description": "The following flags are available for the `help` command:",
        "type": "help",
        "typeDefinitions": {
          "help": {
            "filePath": "src-docs/interfaces/help.interface.ts",
            "name": "help",
            "description": "",
            "members": [
              {
                "filePath": "src-docs/interfaces/help.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-n, --nested-commands",
                "value": "\"\"",
                "description": "Include all nested commands in the output.",
                "isOptional": true
              }
            ],
            "value": "export interface help {\n  /**\n   * Include all nested commands in the output.\n   */\n  '-n, --nested-commands'?: ''\n}"
          }
        }
      }
    ],
    "category": "Commands",
    "subCategory": "common",
    "related": []
  },
  {
    "name": "search",
    "description": "Starts a search on shopify.dev.",
    "overviewPreviewDescription": "Starts a search on shopify.dev.",
    "type": "command",
    "isVisualComponent": false,
    "defaultExample": {
      "codeblock": {
        "tabs": [
          {
            "title": "search",
            "code": "no usage",
            "language": "bash"
          }
        ],
        "title": "search"
      }
    },
    "definitions": [
      {
        "title": "search",
        "description": "The following flags are available for the `search` command:",
        "type": "search",
        "typeDefinitions": {
          "search": {
            "filePath": "src-docs/interfaces/search.interface.ts",
            "name": "search",
            "description": "",
            "members": [],
            "value": "export interface search {\n\n}"
          }
        }
      }
    ],
    "category": "Commands",
    "subCategory": "common",
    "related": []
  },
  {
    "name": "theme check",
    "description": "Validate the theme.",
    "overviewPreviewDescription": "Validate the theme.",
    "type": "command",
    "isVisualComponent": false,
    "defaultExample": {
      "codeblock": {
        "tabs": [
          {
            "title": "theme check",
            "code": "no usage",
            "language": "bash"
          }
        ],
        "title": "theme check"
      }
    },
    "definitions": [
      {
        "title": "theme check",
        "description": "The following flags are available for the `theme check` command:",
        "type": "themecheck",
        "typeDefinitions": {
          "themecheck": {
            "filePath": "src-docs/interfaces/theme-check.interface.ts",
            "name": "themecheck",
            "description": "",
            "members": [
              {
                "filePath": "src-docs/interfaces/theme-check.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--no-color",
                "value": "\"\"",
                "description": "Disable color output.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-check.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--verbose",
                "value": "\"\"",
                "description": "Increase the verbosity of the logs.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-check.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--dev-preview",
                "value": "\"\"",
                "description": "Use the dev preview version of theme check Applies the typescript implementation of theme check to the theme",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-check.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--path <value>",
                "value": "string",
                "description": "The path to your theme directory.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-check.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-a, --auto-correct",
                "value": "\"\"",
                "description": "Automatically fix offenses",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-check.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-c, --category <value>",
                "value": "string",
                "description": "Only run this category of checks Runs checks matching all categories when specified more than once",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-check.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-C, --config <value>",
                "value": "string",
                "description": "Use the config provided, overriding .theme-check.yml if present  Supports all theme-check: config values, e.g., theme-check:theme-app-extension,  theme-check:recommended, theme-check:all  For backwards compatibility, :theme_app_extension is also supported",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-check.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-x, --exclude-category <value>",
                "value": "string",
                "description": "Exclude this category of checks Excludes checks matching any category when specified more than once",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-check.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--fail-level <value>",
                "value": "string",
                "description": "Minimum severity for exit with error code",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-check.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--update-docs",
                "value": "\"\"",
                "description": "Update Theme Check docs (objects, filters, and tags)",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-check.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--init",
                "value": "\"\"",
                "description": "Generate a .theme-check.yml file",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-check.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--list",
                "value": "\"\"",
                "description": "List enabled checks",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-check.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-o, --output <value>",
                "value": "string",
                "description": "The output format to use",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-check.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--print",
                "value": "\"\"",
                "description": "Output active config to STDOUT",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-check.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-v, --version",
                "value": "\"\"",
                "description": "Print Theme Check version",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-check.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-e, --environment <value>",
                "value": "string",
                "description": "The environment to apply to the current command.",
                "isOptional": true
              }
            ],
            "value": "export interface themecheck {\n  /**\n   * Disable color output.\n   */\n  '--no-color'?: ''\n\n  /**\n   * Increase the verbosity of the logs.\n   */\n  '--verbose'?: ''\n\n  /**\n   * Use the dev preview version of theme check\nApplies the typescript implementation of theme check to the theme\n   */\n  '--dev-preview'?: ''\n\n  /**\n   * The path to your theme directory.\n   */\n  '--path <value>'?: string\n\n  /**\n   * Automatically fix offenses\n   */\n  '-a, --auto-correct'?: ''\n\n  /**\n   * Only run this category of checks\nRuns checks matching all categories when specified more than once\n   */\n  '-c, --category <value>'?: string\n\n  /**\n   * Use the config provided, overriding .theme-check.yml if present\n      Supports all theme-check: config values, e.g., theme-check:theme-app-extension,\n      theme-check:recommended, theme-check:all\n      For backwards compatibility, :theme_app_extension is also supported \n   */\n  '-C, --config <value>'?: string\n\n  /**\n   * Exclude this category of checks\nExcludes checks matching any category when specified more than once\n   */\n  '-x, --exclude-category <value>'?: string\n\n  /**\n   * Minimum severity for exit with error code\n   */\n  '--fail-level <value>'?: string\n\n  /**\n   * Update Theme Check docs (objects, filters, and tags)\n   */\n  '--update-docs'?: ''\n\n  /**\n   * Generate a .theme-check.yml file\n   */\n  '--init'?: ''\n\n  /**\n   * List enabled checks\n   */\n  '--list'?: ''\n\n  /**\n   * The output format to use\n   */\n  '-o, --output <value>'?: string\n\n  /**\n   * Output active config to STDOUT\n   */\n  '--print'?: ''\n\n  /**\n   * Print Theme Check version\n   */\n  '-v, --version'?: ''\n\n  /**\n   * The environment to apply to the current command.\n   */\n  '-e, --environment <value>'?: string\n}"
          }
        }
      }
    ],
    "category": "Commands",
    "subCategory": "theme",
    "related": []
  },
  {
    "name": "theme console",
    "description": "Shopify Liquid REPL (read-eval-print loop) tool",
    "overviewPreviewDescription": "Shopify Liquid REPL (read-eval-print loop) tool",
    "type": "command",
    "isVisualComponent": false,
    "defaultExample": {
      "codeblock": {
        "tabs": [
          {
            "title": "theme console",
            "code": "no usage",
            "language": "bash"
          }
        ],
        "title": "theme console"
      }
    },
    "definitions": [
      {
        "title": "theme console",
        "description": "The following flags are available for the `theme console` command:",
        "type": "themeconsole",
        "typeDefinitions": {
          "themeconsole": {
            "filePath": "src-docs/interfaces/theme-console.interface.ts",
            "name": "themeconsole",
            "description": "",
            "members": [
              {
                "filePath": "src-docs/interfaces/theme-console.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--no-color",
                "value": "\"\"",
                "description": "Disable color output.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-console.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--verbose",
                "value": "\"\"",
                "description": "Increase the verbosity of the logs.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-console.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-s, --store <value>",
                "value": "string",
                "description": "Store URL. It can be the store prefix (johns-apparel) or the full myshopify.com URL (johns-apparel.myshopify.com, https://johns-apparel.myshopify.com).",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-console.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--password <value>",
                "value": "string",
                "description": "Password generated from the Theme Access app.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-console.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-e, --environment <value>",
                "value": "string",
                "description": "The environment to apply to the current command.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-console.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--url <value>",
                "value": "string",
                "description": "The url to be used as context",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-console.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--port <value>",
                "value": "string",
                "description": "Local port to serve authentication service.",
                "isOptional": true
              }
            ],
            "value": "export interface themeconsole {\n  /**\n   * Disable color output.\n   */\n  '--no-color'?: ''\n\n  /**\n   * Increase the verbosity of the logs.\n   */\n  '--verbose'?: ''\n\n  /**\n   * Store URL. It can be the store prefix (johns-apparel) or the full myshopify.com URL (johns-apparel.myshopify.com, https://johns-apparel.myshopify.com).\n   */\n  '-s, --store <value>'?: string\n\n  /**\n   * Password generated from the Theme Access app.\n   */\n  '--password <value>'?: string\n\n  /**\n   * The environment to apply to the current command.\n   */\n  '-e, --environment <value>'?: string\n\n  /**\n   * The url to be used as context\n   */\n  '--url <value>'?: string\n\n  /**\n   * Local port to serve authentication service.\n   */\n  '--port <value>'?: string\n}"
          }
        }
      }
    ],
    "category": "Commands",
    "subCategory": "theme",
    "related": []
  },
  {
    "name": "theme delete",
    "description": "Delete remote themes from the connected store. This command can't be undone.",
    "overviewPreviewDescription": "Delete remote themes from the connected store. This command can't be undone.",
    "type": "command",
    "isVisualComponent": false,
    "defaultExample": {
      "codeblock": {
        "tabs": [
          {
            "title": "theme delete",
            "code": "no usage",
            "language": "bash"
          }
        ],
        "title": "theme delete"
      }
    },
    "definitions": [
      {
        "title": "theme delete",
        "description": "The following flags are available for the `theme delete` command:",
        "type": "themedelete",
        "typeDefinitions": {
          "themedelete": {
            "filePath": "src-docs/interfaces/theme-delete.interface.ts",
            "name": "themedelete",
            "description": "",
            "members": [
              {
                "filePath": "src-docs/interfaces/theme-delete.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--no-color",
                "value": "\"\"",
                "description": "Disable color output.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-delete.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--verbose",
                "value": "\"\"",
                "description": "Increase the verbosity of the logs.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-delete.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--password <value>",
                "value": "string",
                "description": "Password generated from the Theme Access app.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-delete.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-d, --development",
                "value": "\"\"",
                "description": "Delete your development theme.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-delete.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-a, --show-all",
                "value": "\"\"",
                "description": "Include others development themes in theme list.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-delete.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-f, --force",
                "value": "\"\"",
                "description": "Skip confirmation.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-delete.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-t, --theme <value>",
                "value": "string",
                "description": "Theme ID or name of the remote theme.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-delete.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-s, --store <value>",
                "value": "string",
                "description": "Store URL. It can be the store prefix (johns-apparel) or the full myshopify.com URL (johns-apparel.myshopify.com, https://johns-apparel.myshopify.com).",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-delete.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-e, --environment <value>",
                "value": "string",
                "description": "The environment to apply to the current command.",
                "isOptional": true
              }
            ],
            "value": "export interface themedelete {\n  /**\n   * Disable color output.\n   */\n  '--no-color'?: ''\n\n  /**\n   * Increase the verbosity of the logs.\n   */\n  '--verbose'?: ''\n\n  /**\n   * Password generated from the Theme Access app.\n   */\n  '--password <value>'?: string\n\n  /**\n   * Delete your development theme.\n   */\n  '-d, --development'?: ''\n\n  /**\n   * Include others development themes in theme list.\n   */\n  '-a, --show-all'?: ''\n\n  /**\n   * Skip confirmation.\n   */\n  '-f, --force'?: ''\n\n  /**\n   * Theme ID or name of the remote theme.\n   */\n  '-t, --theme <value>'?: string\n\n  /**\n   * Store URL. It can be the store prefix (johns-apparel) or the full myshopify.com URL (johns-apparel.myshopify.com, https://johns-apparel.myshopify.com).\n   */\n  '-s, --store <value>'?: string\n\n  /**\n   * The environment to apply to the current command.\n   */\n  '-e, --environment <value>'?: string\n}"
          }
        }
      }
    ],
    "category": "Commands",
    "subCategory": "theme",
    "related": []
  },
  {
    "name": "theme dev",
    "description": "Uploads the current theme as a development theme to the connected store, then prints theme editor and preview URLs to your terminal. While running, changes will push to the store in real time.",
    "overviewPreviewDescription": "Uploads the current theme as a development theme to the connected store, then prints theme editor and preview URLs to your terminal. While running, changes will push to the store in real time.",
    "type": "command",
    "isVisualComponent": false,
    "defaultExample": {
      "codeblock": {
        "tabs": [
          {
            "title": "theme dev",
            "code": "no usage",
            "language": "bash"
          }
        ],
        "title": "theme dev"
      }
    },
    "definitions": [
      {
        "title": "theme dev",
        "description": "The following flags are available for the `theme dev` command:",
        "type": "themedev",
        "typeDefinitions": {
          "themedev": {
            "filePath": "src-docs/interfaces/theme-dev.interface.ts",
            "name": "themedev",
            "description": "",
            "members": [
              {
                "filePath": "src-docs/interfaces/theme-dev.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--no-color",
                "value": "\"\"",
                "description": "Disable color output.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-dev.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--verbose",
                "value": "\"\"",
                "description": "Increase the verbosity of the logs.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-dev.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--path <value>",
                "value": "string",
                "description": "The path to your theme directory.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-dev.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--host <value>",
                "value": "string",
                "description": "Set which network interface the web server listens on. The default value is 127.0.0.1.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-dev.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--live-reload <value>",
                "value": "string",
                "description": "The live reload mode switches the server behavior when a file is modified: - hot-reload Hot reloads local changes to CSS and sections (default) - full-page  Always refreshes the entire page - off        Deactivate live reload",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-dev.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--poll",
                "value": "\"\"",
                "description": "Force polling to detect file changes.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-dev.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--theme-editor-sync",
                "value": "\"\"",
                "description": "Synchronize Theme Editor updates in the local theme files.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-dev.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--port <value>",
                "value": "string",
                "description": "Local port to serve theme preview from.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-dev.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-s, --store <value>",
                "value": "string",
                "description": "Store URL. It can be the store prefix (johns-apparel) or the full myshopify.com URL (johns-apparel.myshopify.com, https://johns-apparel.myshopify.com).",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-dev.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-t, --theme <value>",
                "value": "string",
                "description": "Theme ID or name of the remote theme.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-dev.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-n, --nodelete",
                "value": "\"\"",
                "description": "Runs the dev command without deleting local files.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-dev.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-o, --only <value>",
                "value": "string",
                "description": "Hot reload only files that match the specified pattern.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-dev.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-x, --ignore <value>",
                "value": "string",
                "description": "Skip hot reloading any files that match the specified pattern.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-dev.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--password <value>",
                "value": "string",
                "description": "Password generated from the Theme Access app.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-dev.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-e, --environment <value>",
                "value": "string",
                "description": "The environment to apply to the current command.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-dev.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--notify <value>",
                "value": "string",
                "description": "The file path or URL. The file path is to a file that you want updated on idle. The URL path is where you want a webhook posted to report on file changes.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-dev.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--open",
                "value": "\"\"",
                "description": "Automatically launch the theme preview in your default web browser.",
                "isOptional": true
              }
            ],
            "value": "export interface themedev {\n  /**\n   * Disable color output.\n   */\n  '--no-color'?: ''\n\n  /**\n   * Increase the verbosity of the logs.\n   */\n  '--verbose'?: ''\n\n  /**\n   * The path to your theme directory.\n   */\n  '--path <value>'?: string\n\n  /**\n   * Set which network interface the web server listens on. The default value is 127.0.0.1.\n   */\n  '--host <value>'?: string\n\n  /**\n   * The live reload mode switches the server behavior when a file is modified:\n- hot-reload Hot reloads local changes to CSS and sections (default)\n- full-page  Always refreshes the entire page\n- off        Deactivate live reload\n   */\n  '--live-reload <value>'?: string\n\n  /**\n   * Force polling to detect file changes.\n   */\n  '--poll'?: ''\n\n  /**\n   * Synchronize Theme Editor updates in the local theme files.\n   */\n  '--theme-editor-sync'?: ''\n\n  /**\n   * Local port to serve theme preview from.\n   */\n  '--port <value>'?: string\n\n  /**\n   * Store URL. It can be the store prefix (johns-apparel) or the full myshopify.com URL (johns-apparel.myshopify.com, https://johns-apparel.myshopify.com).\n   */\n  '-s, --store <value>'?: string\n\n  /**\n   * Theme ID or name of the remote theme.\n   */\n  '-t, --theme <value>'?: string\n\n  /**\n   * Runs the dev command without deleting local files.\n   */\n  '-n, --nodelete'?: ''\n\n  /**\n   * Hot reload only files that match the specified pattern.\n   */\n  '-o, --only <value>'?: string\n\n  /**\n   * Skip hot reloading any files that match the specified pattern.\n   */\n  '-x, --ignore <value>'?: string\n\n  /**\n   * Password generated from the Theme Access app.\n   */\n  '--password <value>'?: string\n\n  /**\n   * The environment to apply to the current command.\n   */\n  '-e, --environment <value>'?: string\n\n  /**\n   * The file path or URL. The file path is to a file that you want updated on idle. The URL path is where you want a webhook posted to report on file changes.\n   */\n  '--notify <value>'?: string\n\n  /**\n   * Automatically launch the theme preview in your default web browser.\n   */\n  '--open'?: ''\n}"
          }
        }
      }
    ],
    "category": "Commands",
    "subCategory": "theme",
    "related": []
  },
  {
    "name": "theme info",
    "description": "Print basic information about your theme environment.",
    "overviewPreviewDescription": "Print basic information about your theme environment.",
    "type": "command",
    "isVisualComponent": false,
    "defaultExample": {
      "codeblock": {
        "tabs": [
          {
            "title": "theme info",
            "code": "no usage",
            "language": "bash"
          }
        ],
        "title": "theme info"
      }
    },
    "definitions": [
      {
        "title": "theme info",
        "description": "The following flags are available for the `theme info` command:",
        "type": "themeinfo",
        "typeDefinitions": {
          "themeinfo": {
            "filePath": "src-docs/interfaces/theme-info.interface.ts",
            "name": "themeinfo",
            "description": "",
            "members": [
              {
                "filePath": "src-docs/interfaces/theme-info.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--no-color",
                "value": "\"\"",
                "description": "Disable color output.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-info.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--verbose",
                "value": "\"\"",
                "description": "Increase the verbosity of the logs.",
                "isOptional": true
              }
            ],
            "value": "export interface themeinfo {\n  /**\n   * Disable color output.\n   */\n  '--no-color'?: ''\n\n  /**\n   * Increase the verbosity of the logs.\n   */\n  '--verbose'?: ''\n}"
          }
        }
      }
    ],
    "category": "Commands",
    "subCategory": "theme",
    "related": []
  },
  {
    "name": "theme init",
    "description": "Clones a Git repository to use as a starting point for building a new theme.",
    "overviewPreviewDescription": "Clones a Git repository to use as a starting point for building a new theme.",
    "type": "command",
    "isVisualComponent": false,
    "defaultExample": {
      "codeblock": {
        "tabs": [
          {
            "title": "theme init",
            "code": "no usage",
            "language": "bash"
          }
        ],
        "title": "theme init"
      }
    },
    "definitions": [
      {
        "title": "theme init",
        "description": "The following flags are available for the `theme init` command:",
        "type": "themeinit",
        "typeDefinitions": {
          "themeinit": {
            "filePath": "src-docs/interfaces/theme-init.interface.ts",
            "name": "themeinit",
            "description": "",
            "members": [
              {
                "filePath": "src-docs/interfaces/theme-init.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--no-color",
                "value": "\"\"",
                "description": "Disable color output.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-init.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--verbose",
                "value": "\"\"",
                "description": "Increase the verbosity of the logs.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-init.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--path <value>",
                "value": "string",
                "description": "The path to your theme directory.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-init.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-u, --clone-url <value>",
                "value": "string",
                "description": "The Git URL to clone from. Defaults to Shopify's example theme, Dawn: https://github.com/Shopify/dawn.git",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-init.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-l, --latest",
                "value": "\"\"",
                "description": "Downloads the latest release of the `clone-url`",
                "isOptional": true
              }
            ],
            "value": "export interface themeinit {\n  /**\n   * Disable color output.\n   */\n  '--no-color'?: ''\n\n  /**\n   * Increase the verbosity of the logs.\n   */\n  '--verbose'?: ''\n\n  /**\n   * The path to your theme directory.\n   */\n  '--path <value>'?: string\n\n  /**\n   * The Git URL to clone from. Defaults to Shopify's example theme, Dawn: https://github.com/Shopify/dawn.git\n   */\n  '-u, --clone-url <value>'?: string\n\n  /**\n   * Downloads the latest release of the `clone-url`\n   */\n  '-l, --latest'?: ''\n}"
          }
        }
      }
    ],
    "category": "Commands",
    "subCategory": "theme",
    "related": []
  },
  {
    "name": "theme language-server",
    "description": "Start a Language Server Protocol server.",
    "overviewPreviewDescription": "Start a Language Server Protocol server.",
    "type": "command",
    "isVisualComponent": false,
    "defaultExample": {
      "codeblock": {
        "tabs": [
          {
            "title": "theme language-server",
            "code": "no usage",
            "language": "bash"
          }
        ],
        "title": "theme language-server"
      }
    },
    "definitions": [
      {
        "title": "theme language-server",
        "description": "The following flags are available for the `theme language-server` command:",
        "type": "themelanguageserver",
        "typeDefinitions": {
          "themelanguageserver": {
            "filePath": "src-docs/interfaces/theme-language-server.interface.ts",
            "name": "themelanguageserver",
            "description": "",
            "members": [
              {
                "filePath": "src-docs/interfaces/theme-language-server.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--no-color",
                "value": "\"\"",
                "description": "Disable color output.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-language-server.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--verbose",
                "value": "\"\"",
                "description": "Increase the verbosity of the logs.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-language-server.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--dev-preview",
                "value": "\"\"",
                "description": "Use the dev preview version of theme check Applies the typescript implementation of theme check to the theme",
                "isOptional": true
              }
            ],
            "value": "export interface themelanguageserver {\n  /**\n   * Disable color output.\n   */\n  '--no-color'?: ''\n\n  /**\n   * Increase the verbosity of the logs.\n   */\n  '--verbose'?: ''\n\n  /**\n   * Use the dev preview version of theme check\nApplies the typescript implementation of theme check to the theme\n   */\n  '--dev-preview'?: ''\n}"
          }
        }
      }
    ],
    "category": "Commands",
    "subCategory": "theme",
    "related": []
  },
  {
    "name": "theme list",
    "description": "Lists your remote themes.",
    "overviewPreviewDescription": "Lists your remote themes.",
    "type": "command",
    "isVisualComponent": false,
    "defaultExample": {
      "codeblock": {
        "tabs": [
          {
            "title": "theme list",
            "code": "no usage",
            "language": "bash"
          }
        ],
        "title": "theme list"
      }
    },
    "definitions": [
      {
        "title": "theme list",
        "description": "The following flags are available for the `theme list` command:",
        "type": "themelist",
        "typeDefinitions": {
          "themelist": {
            "filePath": "src-docs/interfaces/theme-list.interface.ts",
            "name": "themelist",
            "description": "",
            "members": [
              {
                "filePath": "src-docs/interfaces/theme-list.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--no-color",
                "value": "\"\"",
                "description": "Disable color output.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-list.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--verbose",
                "value": "\"\"",
                "description": "Increase the verbosity of the logs.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-list.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--password <value>",
                "value": "string",
                "description": "Password generated from the Theme Access app.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-list.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-s, --store <value>",
                "value": "string",
                "description": "Store URL. It can be the store prefix (johns-apparel) or the full myshopify.com URL (johns-apparel.myshopify.com, https://johns-apparel.myshopify.com).",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-list.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--role <value>",
                "value": "string",
                "description": "Only list themes with the given role.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-list.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--name <value>",
                "value": "string",
                "description": "Only list themes that contain the given name.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-list.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--id <value>",
                "value": "string",
                "description": "Only list theme with the given ID.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-list.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--json",
                "value": "\"\"",
                "description": "Output the theme list as JSON.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-list.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-e, --environment <value>",
                "value": "string",
                "description": "The environment to apply to the current command.",
                "isOptional": true
              }
            ],
            "value": "export interface themelist {\n  /**\n   * Disable color output.\n   */\n  '--no-color'?: ''\n\n  /**\n   * Increase the verbosity of the logs.\n   */\n  '--verbose'?: ''\n\n  /**\n   * Password generated from the Theme Access app.\n   */\n  '--password <value>'?: string\n\n  /**\n   * Store URL. It can be the store prefix (johns-apparel) or the full myshopify.com URL (johns-apparel.myshopify.com, https://johns-apparel.myshopify.com).\n   */\n  '-s, --store <value>'?: string\n\n  /**\n   * Only list themes with the given role.\n   */\n  '--role <value>'?: string\n\n  /**\n   * Only list themes that contain the given name.\n   */\n  '--name <value>'?: string\n\n  /**\n   * Only list theme with the given ID.\n   */\n  '--id <value>'?: string\n\n  /**\n   * Output the theme list as JSON.\n   */\n  '--json'?: ''\n\n  /**\n   * The environment to apply to the current command.\n   */\n  '-e, --environment <value>'?: string\n}"
          }
        }
      }
    ],
    "category": "Commands",
    "subCategory": "theme",
    "related": []
  },
  {
    "name": "theme open",
    "description": "Opens the preview of your remote theme.",
    "overviewPreviewDescription": "Opens the preview of your remote theme.",
    "type": "command",
    "isVisualComponent": false,
    "defaultExample": {
      "codeblock": {
        "tabs": [
          {
            "title": "theme open",
            "code": "no usage",
            "language": "bash"
          }
        ],
        "title": "theme open"
      }
    },
    "definitions": [
      {
        "title": "theme open",
        "description": "The following flags are available for the `theme open` command:",
        "type": "themeopen",
        "typeDefinitions": {
          "themeopen": {
            "filePath": "src-docs/interfaces/theme-open.interface.ts",
            "name": "themeopen",
            "description": "",
            "members": [
              {
                "filePath": "src-docs/interfaces/theme-open.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--no-color",
                "value": "\"\"",
                "description": "Disable color output.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-open.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--verbose",
                "value": "\"\"",
                "description": "Increase the verbosity of the logs.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-open.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--password <value>",
                "value": "string",
                "description": "Password generated from the Theme Access app.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-open.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-d, --development",
                "value": "\"\"",
                "description": "Open your development theme.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-open.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-E, --editor",
                "value": "\"\"",
                "description": "Open the theme editor for the specified theme in the browser.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-open.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-l, --live",
                "value": "\"\"",
                "description": "Open your live (published) theme.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-open.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-t, --theme <value>",
                "value": "string",
                "description": "Theme ID or name of the remote theme.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-open.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-s, --store <value>",
                "value": "string",
                "description": "Store URL. It can be the store prefix (johns-apparel) or the full myshopify.com URL (johns-apparel.myshopify.com, https://johns-apparel.myshopify.com).",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-open.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-e, --environment <value>",
                "value": "string",
                "description": "The environment to apply to the current command.",
                "isOptional": true
              }
            ],
            "value": "export interface themeopen {\n  /**\n   * Disable color output.\n   */\n  '--no-color'?: ''\n\n  /**\n   * Increase the verbosity of the logs.\n   */\n  '--verbose'?: ''\n\n  /**\n   * Password generated from the Theme Access app.\n   */\n  '--password <value>'?: string\n\n  /**\n   * Open your development theme.\n   */\n  '-d, --development'?: ''\n\n  /**\n   * Open the theme editor for the specified theme in the browser.\n   */\n  '-E, --editor'?: ''\n\n  /**\n   * Open your live (published) theme.\n   */\n  '-l, --live'?: ''\n\n  /**\n   * Theme ID or name of the remote theme.\n   */\n  '-t, --theme <value>'?: string\n\n  /**\n   * Store URL. It can be the store prefix (johns-apparel) or the full myshopify.com URL (johns-apparel.myshopify.com, https://johns-apparel.myshopify.com).\n   */\n  '-s, --store <value>'?: string\n\n  /**\n   * The environment to apply to the current command.\n   */\n  '-e, --environment <value>'?: string\n}"
          }
        }
      }
    ],
    "category": "Commands",
    "subCategory": "theme",
    "related": []
  },
  {
    "name": "theme package",
    "description": "Package your theme into a .zip file, ready to upload to the Online Store.",
    "overviewPreviewDescription": "Package your theme into a .zip file, ready to upload to the Online Store.",
    "type": "command",
    "isVisualComponent": false,
    "defaultExample": {
      "codeblock": {
        "tabs": [
          {
            "title": "theme package",
            "code": "no usage",
            "language": "bash"
          }
        ],
        "title": "theme package"
      }
    },
    "definitions": [
      {
        "title": "theme package",
        "description": "The following flags are available for the `theme package` command:",
        "type": "themepackage",
        "typeDefinitions": {
          "themepackage": {
            "filePath": "src-docs/interfaces/theme-package.interface.ts",
            "name": "themepackage",
            "description": "",
            "members": [
              {
                "filePath": "src-docs/interfaces/theme-package.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--no-color",
                "value": "\"\"",
                "description": "Disable color output.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-package.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--verbose",
                "value": "\"\"",
                "description": "Increase the verbosity of the logs.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-package.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--path <value>",
                "value": "string",
                "description": "The path to your theme directory.",
                "isOptional": true
              }
            ],
            "value": "export interface themepackage {\n  /**\n   * Disable color output.\n   */\n  '--no-color'?: ''\n\n  /**\n   * Increase the verbosity of the logs.\n   */\n  '--verbose'?: ''\n\n  /**\n   * The path to your theme directory.\n   */\n  '--path <value>'?: string\n}"
          }
        }
      }
    ],
    "category": "Commands",
    "subCategory": "theme",
    "related": []
  },
  {
    "name": "theme publish",
    "description": "Set a remote theme as the live theme.",
    "overviewPreviewDescription": "Set a remote theme as the live theme.",
    "type": "command",
    "isVisualComponent": false,
    "defaultExample": {
      "codeblock": {
        "tabs": [
          {
            "title": "theme publish",
            "code": "no usage",
            "language": "bash"
          }
        ],
        "title": "theme publish"
      }
    },
    "definitions": [
      {
        "title": "theme publish",
        "description": "The following flags are available for the `theme publish` command:",
        "type": "themepublish",
        "typeDefinitions": {
          "themepublish": {
            "filePath": "src-docs/interfaces/theme-publish.interface.ts",
            "name": "themepublish",
            "description": "",
            "members": [
              {
                "filePath": "src-docs/interfaces/theme-publish.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--no-color",
                "value": "\"\"",
                "description": "Disable color output.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-publish.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--verbose",
                "value": "\"\"",
                "description": "Increase the verbosity of the logs.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-publish.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--password <value>",
                "value": "string",
                "description": "Password generated from the Theme Access app.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-publish.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-f, --force",
                "value": "\"\"",
                "description": "Skip confirmation.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-publish.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-t, --theme <value>",
                "value": "string",
                "description": "Theme ID or name of the remote theme.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-publish.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-s, --store <value>",
                "value": "string",
                "description": "Store URL. It can be the store prefix (johns-apparel) or the full myshopify.com URL (johns-apparel.myshopify.com, https://johns-apparel.myshopify.com).",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-publish.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-e, --environment <value>",
                "value": "string",
                "description": "The environment to apply to the current command.",
                "isOptional": true
              }
            ],
            "value": "export interface themepublish {\n  /**\n   * Disable color output.\n   */\n  '--no-color'?: ''\n\n  /**\n   * Increase the verbosity of the logs.\n   */\n  '--verbose'?: ''\n\n  /**\n   * Password generated from the Theme Access app.\n   */\n  '--password <value>'?: string\n\n  /**\n   * Skip confirmation.\n   */\n  '-f, --force'?: ''\n\n  /**\n   * Theme ID or name of the remote theme.\n   */\n  '-t, --theme <value>'?: string\n\n  /**\n   * Store URL. It can be the store prefix (johns-apparel) or the full myshopify.com URL (johns-apparel.myshopify.com, https://johns-apparel.myshopify.com).\n   */\n  '-s, --store <value>'?: string\n\n  /**\n   * The environment to apply to the current command.\n   */\n  '-e, --environment <value>'?: string\n}"
          }
        }
      }
    ],
    "category": "Commands",
    "subCategory": "theme",
    "related": []
  },
  {
    "name": "theme pull",
    "description": "Download your remote theme files locally.",
    "overviewPreviewDescription": "Download your remote theme files locally.",
    "type": "command",
    "isVisualComponent": false,
    "defaultExample": {
      "codeblock": {
        "tabs": [
          {
            "title": "theme pull",
            "code": "no usage",
            "language": "bash"
          }
        ],
        "title": "theme pull"
      }
    },
    "definitions": [
      {
        "title": "theme pull",
        "description": "The following flags are available for the `theme pull` command:",
        "type": "themepull",
        "typeDefinitions": {
          "themepull": {
            "filePath": "src-docs/interfaces/theme-pull.interface.ts",
            "name": "themepull",
            "description": "",
            "members": [
              {
                "filePath": "src-docs/interfaces/theme-pull.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--no-color",
                "value": "\"\"",
                "description": "Disable color output.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-pull.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--verbose",
                "value": "\"\"",
                "description": "Increase the verbosity of the logs.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-pull.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--path <value>",
                "value": "string",
                "description": "The path to your theme directory.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-pull.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--password <value>",
                "value": "string",
                "description": "Password generated from the Theme Access app.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-pull.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-s, --store <value>",
                "value": "string",
                "description": "Store URL. It can be the store prefix (johns-apparel) or the full myshopify.com URL (johns-apparel.myshopify.com, https://johns-apparel.myshopify.com).",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-pull.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-e, --environment <value>",
                "value": "string",
                "description": "The environment to apply to the current command.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-pull.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-t, --theme <value>",
                "value": "string",
                "description": "Theme ID or name of the remote theme.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-pull.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-d, --development",
                "value": "\"\"",
                "description": "Pull theme files from your remote development theme.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-pull.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-l, --live",
                "value": "\"\"",
                "description": "Pull theme files from your remote live theme.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-pull.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-n, --nodelete",
                "value": "\"\"",
                "description": "Runs the pull command without deleting local files.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-pull.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-o, --only <value>",
                "value": "string",
                "description": "Download only the specified files (Multiple flags allowed).",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-pull.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-x, --ignore <value>",
                "value": "string",
                "description": "Skip downloading the specified files (Multiple flags allowed).",
                "isOptional": true
              }
            ],
            "value": "export interface themepull {\n  /**\n   * Disable color output.\n   */\n  '--no-color'?: ''\n\n  /**\n   * Increase the verbosity of the logs.\n   */\n  '--verbose'?: ''\n\n  /**\n   * The path to your theme directory.\n   */\n  '--path <value>'?: string\n\n  /**\n   * Password generated from the Theme Access app.\n   */\n  '--password <value>'?: string\n\n  /**\n   * Store URL. It can be the store prefix (johns-apparel) or the full myshopify.com URL (johns-apparel.myshopify.com, https://johns-apparel.myshopify.com).\n   */\n  '-s, --store <value>'?: string\n\n  /**\n   * The environment to apply to the current command.\n   */\n  '-e, --environment <value>'?: string\n\n  /**\n   * Theme ID or name of the remote theme.\n   */\n  '-t, --theme <value>'?: string\n\n  /**\n   * Pull theme files from your remote development theme.\n   */\n  '-d, --development'?: ''\n\n  /**\n   * Pull theme files from your remote live theme.\n   */\n  '-l, --live'?: ''\n\n  /**\n   * Runs the pull command without deleting local files.\n   */\n  '-n, --nodelete'?: ''\n\n  /**\n   * Download only the specified files (Multiple flags allowed).\n   */\n  '-o, --only <value>'?: string\n\n  /**\n   * Skip downloading the specified files (Multiple flags allowed).\n   */\n  '-x, --ignore <value>'?: string\n}"
          }
        }
      }
    ],
    "category": "Commands",
    "subCategory": "theme",
    "related": []
  },
  {
    "name": "theme push",
    "description": "Uploads your local theme files to the connected store, overwriting the remote version if specified.",
    "overviewPreviewDescription": "Uploads your local theme files to the connected store, overwriting the remote version if specified.",
    "type": "command",
    "isVisualComponent": false,
    "defaultExample": {
      "codeblock": {
        "tabs": [
          {
            "title": "theme push",
            "code": "no usage",
            "language": "bash"
          }
        ],
        "title": "theme push"
      }
    },
    "definitions": [
      {
        "title": "theme push",
        "description": "The following flags are available for the `theme push` command:",
        "type": "themepush",
        "typeDefinitions": {
          "themepush": {
            "filePath": "src-docs/interfaces/theme-push.interface.ts",
            "name": "themepush",
            "description": "",
            "members": [
              {
                "filePath": "src-docs/interfaces/theme-push.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--no-color",
                "value": "\"\"",
                "description": "Disable color output.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-push.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--verbose",
                "value": "\"\"",
                "description": "Increase the verbosity of the logs.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-push.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--path <value>",
                "value": "string",
                "description": "The path to your theme directory.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-push.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--password <value>",
                "value": "string",
                "description": "Password generated from the Theme Access app.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-push.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-s, --store <value>",
                "value": "string",
                "description": "Store URL. It can be the store prefix (johns-apparel) or the full myshopify.com URL (johns-apparel.myshopify.com, https://johns-apparel.myshopify.com).",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-push.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-e, --environment <value>",
                "value": "string",
                "description": "The environment to apply to the current command.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-push.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-t, --theme <value>",
                "value": "string",
                "description": "Theme ID or name of the remote theme.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-push.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-d, --development",
                "value": "\"\"",
                "description": "Push theme files from your remote development theme.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-push.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-l, --live",
                "value": "\"\"",
                "description": "Push theme files from your remote live theme.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-push.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-u, --unpublished",
                "value": "\"\"",
                "description": "Create a new unpublished theme and push to it.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-push.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-n, --nodelete",
                "value": "\"\"",
                "description": "Runs the push command without deleting local files.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-push.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-o, --only <value>",
                "value": "string",
                "description": "Download only the specified files (Multiple flags allowed).",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-push.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-x, --ignore <value>",
                "value": "string",
                "description": "Skip downloading the specified files (Multiple flags allowed).",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-push.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-j, --json",
                "value": "\"\"",
                "description": "Output JSON instead of a UI.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-push.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-a, --allow-live",
                "value": "\"\"",
                "description": "Allow push to a live theme.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-push.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-p, --publish",
                "value": "\"\"",
                "description": "Publish as the live theme after uploading.",
                "isOptional": true
              }
            ],
            "value": "export interface themepush {\n  /**\n   * Disable color output.\n   */\n  '--no-color'?: ''\n\n  /**\n   * Increase the verbosity of the logs.\n   */\n  '--verbose'?: ''\n\n  /**\n   * The path to your theme directory.\n   */\n  '--path <value>'?: string\n\n  /**\n   * Password generated from the Theme Access app.\n   */\n  '--password <value>'?: string\n\n  /**\n   * Store URL. It can be the store prefix (johns-apparel) or the full myshopify.com URL (johns-apparel.myshopify.com, https://johns-apparel.myshopify.com).\n   */\n  '-s, --store <value>'?: string\n\n  /**\n   * The environment to apply to the current command.\n   */\n  '-e, --environment <value>'?: string\n\n  /**\n   * Theme ID or name of the remote theme.\n   */\n  '-t, --theme <value>'?: string\n\n  /**\n   * Push theme files from your remote development theme.\n   */\n  '-d, --development'?: ''\n\n  /**\n   * Push theme files from your remote live theme.\n   */\n  '-l, --live'?: ''\n\n  /**\n   * Create a new unpublished theme and push to it.\n   */\n  '-u, --unpublished'?: ''\n\n  /**\n   * Runs the push command without deleting local files.\n   */\n  '-n, --nodelete'?: ''\n\n  /**\n   * Download only the specified files (Multiple flags allowed).\n   */\n  '-o, --only <value>'?: string\n\n  /**\n   * Skip downloading the specified files (Multiple flags allowed).\n   */\n  '-x, --ignore <value>'?: string\n\n  /**\n   * Output JSON instead of a UI.\n   */\n  '-j, --json'?: ''\n\n  /**\n   * Allow push to a live theme.\n   */\n  '-a, --allow-live'?: ''\n\n  /**\n   * Publish as the live theme after uploading.\n   */\n  '-p, --publish'?: ''\n}"
          }
        }
      }
    ],
    "category": "Commands",
    "subCategory": "theme",
    "related": []
  },
  {
    "name": "theme share",
    "description": "Creates a shareable, unpublished, and new theme on your theme library with a randomized name. Works like an alias to `shopify theme push -u -t=RANDOMIZED_NAME`.",
    "overviewPreviewDescription": "Creates a shareable, unpublished, and new theme on your theme library with a randomized name.",
    "type": "command",
    "isVisualComponent": false,
    "defaultExample": {
      "codeblock": {
        "tabs": [
          {
            "title": "theme share",
            "code": "no usage",
            "language": "bash"
          }
        ],
        "title": "theme share"
      }
    },
    "definitions": [
      {
        "title": "theme share",
        "description": "The following flags are available for the `theme share` command:",
        "type": "themeshare",
        "typeDefinitions": {
          "themeshare": {
            "filePath": "src-docs/interfaces/theme-share.interface.ts",
            "name": "themeshare",
            "description": "",
            "members": [
              {
                "filePath": "src-docs/interfaces/theme-share.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--no-color",
                "value": "\"\"",
                "description": "Disable color output.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-share.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--verbose",
                "value": "\"\"",
                "description": "Increase the verbosity of the logs.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-share.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--path <value>",
                "value": "string",
                "description": "The path to your theme directory.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-share.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--password <value>",
                "value": "string",
                "description": "Password generated from the Theme Access app.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-share.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-s, --store <value>",
                "value": "string",
                "description": "Store URL. It can be the store prefix (johns-apparel) or the full myshopify.com URL (johns-apparel.myshopify.com, https://johns-apparel.myshopify.com).",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/theme-share.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "-e, --environment <value>",
                "value": "string",
                "description": "The environment to apply to the current command.",
                "isOptional": true
              }
            ],
            "value": "export interface themeshare {\n  /**\n   * Disable color output.\n   */\n  '--no-color'?: ''\n\n  /**\n   * Increase the verbosity of the logs.\n   */\n  '--verbose'?: ''\n\n  /**\n   * The path to your theme directory.\n   */\n  '--path <value>'?: string\n\n  /**\n   * Password generated from the Theme Access app.\n   */\n  '--password <value>'?: string\n\n  /**\n   * Store URL. It can be the store prefix (johns-apparel) or the full myshopify.com URL (johns-apparel.myshopify.com, https://johns-apparel.myshopify.com).\n   */\n  '-s, --store <value>'?: string\n\n  /**\n   * The environment to apply to the current command.\n   */\n  '-e, --environment <value>'?: string\n}"
          }
        }
      }
    ],
    "category": "Commands",
    "subCategory": "theme",
    "related": []
  },
  {
    "name": "upgrade",
    "description": "Upgrade the Shopify CLI.",
    "overviewPreviewDescription": "Upgrade the Shopify CLI.",
    "type": "command",
    "isVisualComponent": false,
    "defaultExample": {
      "codeblock": {
        "tabs": [
          {
            "title": "upgrade",
            "code": "no usage",
            "language": "bash"
          }
        ],
        "title": "upgrade"
      }
    },
    "definitions": [
      {
        "title": "upgrade",
        "description": "The following flags are available for the `upgrade` command:",
        "type": "upgrade",
        "typeDefinitions": {
          "upgrade": {
            "filePath": "src-docs/interfaces/upgrade.interface.ts",
            "name": "upgrade",
            "description": "",
            "members": [
              {
                "filePath": "src-docs/interfaces/upgrade.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--path <value>",
                "value": "string",
                "description": "The path to your project directory.",
                "isOptional": true
              }
            ],
            "value": "export interface upgrade {\n  /**\n   * The path to your project directory.\n   */\n  '--path <value>'?: string\n}"
          }
        }
      }
    ],
    "category": "Commands",
    "subCategory": "common",
    "related": []
  },
  {
    "name": "version",
    "description": "Shopify CLI version.",
    "overviewPreviewDescription": "Shopify CLI version.",
    "type": "command",
    "isVisualComponent": false,
    "defaultExample": {
      "codeblock": {
        "tabs": [
          {
            "title": "version",
            "code": "no usage",
            "language": "bash"
          }
        ],
        "title": "version"
      }
    },
    "definitions": [
      {
        "title": "version",
        "description": "The following flags are available for the `version` command:",
        "type": "version",
        "typeDefinitions": {
          "version": {
            "filePath": "src-docs/interfaces/version.interface.ts",
            "name": "version",
            "description": "",
            "members": [],
            "value": "export interface version {\n\n}"
          }
        }
      }
    ],
    "category": "Commands",
    "subCategory": "common",
    "related": []
  },
  {
    "name": "webhook trigger",
    "description": "\n  Triggers the delivery of a sample Admin API event topic payload to a designated address.\n\n  You should use this command to experiment with webhooks, to initially test your webhook configuration, or for unit testing. However, to test your webhook configuration from end to end, you should always trigger webhooks by performing the related action in Shopify.\n\n  Because most webhook deliveries use remote endpoints, you can trigger the command from any directory where you can use Shopify CLI, and send the webhook to any of the supported endpoint types. For example, you can run the command from your app's local directory, but send the webhook to a staging environment endpoint.\n\n  To learn more about using webhooks in a Shopify app, refer to [Webhooks overview](https://shopify.dev/docs/apps/webhooks).\n\n  ### Limitations\n\n  - Webhooks triggered using this method always have the same payload, so they can't be used to test scenarios that differ based on the payload contents.\n  - Webhooks triggered using this method aren't retried when they fail.\n  - Trigger requests are rate-limited using the Partner API rate limit.\n  - You can't use this method to validate your API webhook subscriptions.\n  ",
    "overviewPreviewDescription": "Trigger delivery of a sample webhook topic payload to a designated address.",
    "type": "command",
    "isVisualComponent": false,
    "defaultExample": {
      "codeblock": {
        "tabs": [
          {
            "title": "webhook trigger",
            "code": "shopify webhook trigger [flags]",
            "language": "bash"
          }
        ],
        "title": "webhook trigger"
      }
    },
    "definitions": [
      {
        "title": "webhook trigger",
        "description": "The following flags are available for the `webhook trigger` command:",
        "type": "webhooktrigger",
        "typeDefinitions": {
          "webhooktrigger": {
            "filePath": "src-docs/interfaces/webhook-trigger.interface.ts",
            "name": "webhooktrigger",
            "description": "",
            "members": [
              {
                "filePath": "src-docs/interfaces/webhook-trigger.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--help",
                "value": "\"\"",
                "description": "This help. When you run the trigger command the CLI will prompt you for any information that isn't passed using flags.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/webhook-trigger.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--topic <value>",
                "value": "string",
                "description": "The requested webhook topic.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/webhook-trigger.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--api-version <value>",
                "value": "string",
                "description": "The API Version of the webhook topic.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/webhook-trigger.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--delivery-method <value>",
                "value": "string",
                "description": "Method chosen to deliver the topic payload. If not passed, it's inferred from the address.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/webhook-trigger.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--shared-secret <value>",
                "value": "string",
                "description": "Deprecated. Please use client-secret.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/webhook-trigger.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--client-secret <value>",
                "value": "string",
                "description": "Your app's client secret. This secret allows us to return the X-Shopify-Hmac-SHA256 header that lets you validate the origin of the response that you receive.",
                "isOptional": true
              },
              {
                "filePath": "src-docs/interfaces/webhook-trigger.interface.ts",
                "syntaxKind": "PropertySignature",
                "name": "--address <value>",
                "value": "string",
                "description": "The URL where the webhook payload should be sent.                You will need a different address type for each delivery-method:                      · For remote HTTP testing, use a URL that starts with https://  · For local HTTP testing, use http://localhost:{port}/{url-path}                      · For Google Pub/Sub, use pubsub://{project-id}:{topic-id}                      · For Amazon EventBridge, use an Amazon Resource Name (ARN) starting with arn:aws:events:",
                "isOptional": true
              }
            ],
            "value": "export interface webhooktrigger {\n  /**\n   * This help. When you run the trigger command the CLI will prompt you for any information that isn't passed using flags.\n   */\n  '--help'?: ''\n\n  /**\n   * The requested webhook topic.\n   */\n  '--topic <value>'?: string\n\n  /**\n   * The API Version of the webhook topic.\n   */\n  '--api-version <value>'?: string\n\n  /**\n   * Method chosen to deliver the topic payload. If not passed, it's inferred from the address.\n   */\n  '--delivery-method <value>'?: string\n\n  /**\n   * Deprecated. Please use client-secret.\n   */\n  '--shared-secret <value>'?: string\n\n  /**\n   * Your app's client secret. This secret allows us to return the X-Shopify-Hmac-SHA256 header that lets you validate the origin of the response that you receive.\n   */\n  '--client-secret <value>'?: string\n\n  /**\n   * The URL where the webhook payload should be sent.\n                    You will need a different address type for each delivery-method:\n                          · For remote HTTP testing, use a URL that starts with https://\n      · For local HTTP testing, use http://localhost:{port}/{url-path}\n                          · For Google Pub/Sub, use pubsub://{project-id}:{topic-id}\n                          · For Amazon EventBridge, use an Amazon Resource Name (ARN) starting with arn:aws:events:\n   */\n  '--address <value>'?: string\n}"
          }
        }
      }
    ],
    "category": "Commands",
    "subCategory": "webhook",
    "related": []
  }
]